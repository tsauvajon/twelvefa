version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.12.7

    working_directory: /home/circleci/twelvefa
    steps:
      - checkout

      - run: ./install.ci.sh
      - run: mkdir artifacts
      - run: go test -v . ./calc > ./artifacts/tests.txt
      - run: cat ./artifacts/tests.txt
      - run: go test ./calc -bench=. > ./artifacts/benchmark.txt
      - run: cat ./artifacts/benchmark.txt
      - run: ls ./artifacts
      - run: ./generate.ci.sh
      - run: go build
      - run: PORT=3000 ./twelvefa & # run the service in the background to test the client
      - run: sleep 5 # wait for 5 seconds for the service to start
      - run: go test -v ./cli > ./artifacts/cli-tests.txt
      - run: pkill ./twelvefa
      - run: cat ./artifacts/cli-tests.txt

      - store_artifacts:
          path: artifacts

  build:
    docker:
      - image: google/cloud-sdk:255.0.0

    working_directory: /home/circleci/twelvefa
    environment:
      IMAGE_NAME: twelvefa
      CIRCLECI_CREDS: ./creds/circleci.json
    steps:
      - checkout

      - run:
          name: Install Docker # from a downloaded binary
          command: |
            set -x # better output formatting
            VER="19.03.1"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv -f /tmp/docker/* /usr/bin

      # Necessary step with CircleCI to use a newly installed Docker
      # https://circleci.com/docs/2.0/building-docker-images/#overview
      - setup_remote_docker

      - run: 
          name: Build the service Docker image
          command: >-
            docker build
            -t gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:latest
            --build-arg CIRCLECI_BUILD_NUMBER=${CIRCLE_BUILD_NUM} .
        
      - run: 
          name: Tag image with build nb
          command: >-
            docker tag
            gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:latest
            gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${CIRCLE_BUILD_NUM}

      - run:
          name: Init the gcloud SDK
          command: |
            mkdir creds
            echo ${GOOGLE_CIRCLECI} > $CIRCLECI_CREDS
            gcloud auth activate-service-account --key-file $CIRCLECI_CREDS
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gcloud config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

      - run:
          name: Push images to the Container Registry
          command: |
            docker push gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:latest
            docker push gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${CIRCLE_BUILD_NUM}


  deploy:
    docker:
      - image: google/cloud-sdk:255.0.0

    working_directory: /home/circleci/twelvefa
    environment:
      IMAGE_NAME: twelvefa
      TF_CREDS: ./creds/terraform.json
    steps:
      - checkout

      - run:
          name: Init the gcloud SDK
          command: |
            mkdir creds
            echo ${GOOGLE_CIRCLECI} > $CIRCLECI_CREDS
            gcloud auth activate-service-account --key-file $CIRCLECI_CREDS
            gcloud config set project ${GOOGLE_PROJECT_ID}
            gcloud config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

      - run:
          name: Apply the infrastructure
          command: |
            terraform apply -auto-approve
            # todo: apply the k8s config

workflows:
  version: 2
  workflow:
    jobs:
      - test
      - build:
          requires:
            - test